name: Update Clone Count

on:
  schedule:
    - cron: '16 10 * * *'

jobs:
  update-count:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Set default clone count if file not exists
        run: |
          if [ ! -f clone_count.txt ]; then
            echo "0" > clone_count.txt
          fi
          if [ ! -r clone_count.txt ] || [ ! -w clone_count.txt ]; then
            echo "Cannot read or write to clone_count.txt"
            exit 1
          fi

      - name: Get current total clone count from file
        id: get-current-total
        run: |
          CURRENT_TOTAL=$(cat clone_count.txt)
          if [ $? -ne 0 ]; then
            echo "Failed to read clone_count.txt. Exit code: $?"
            exit 1
          fi
          echo "current_total=$CURRENT_TOTAL" >> $GITHUB_OUTPUT

      - name: Get today's clone count from API
        id: get-today-count
        run: |
          TODAY=$(date -u +"%Y-%m-%d")
          RESPONSE=$(curl -s --retry 3 --retry-delay 5 -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/traffic/clones)
          if [ $? -ne 0 ]; then
            echo "Failed to call GitHub API. Exit code: $?"
            exit 1
          fi
          echo "API Response: $RESPONSE"
          TODAY_CLONE_COUNT=$(echo "$RESPONSE" | jq -r --arg today "$TODAY" '(.clones // [])[] | select(.timestamp | startswith($today)) | .count')
          if [ $? -ne 0 ]; then
            echo "Failed to parse API response with jq. Exit code: $?"
            exit 1
          fi
          echo "Today's Clone Count: $TODAY_CLONE_COUNT"
          if [ -z "$TODAY_CLONE_COUNT" ]; then
            TODAY_CLONE_COUNT=0
          fi
          echo "today_clone_count=$TODAY_CLONE_COUNT" >> $GITHUB_OUTPUT

      - name: Calculate new total clone count
        id: calculate-new-total
        run: |
          NEW_TOTAL=$((${get-current-total__current_total} + ${get-today-count__today_clone_count}))
          echo "new_total=$NEW_TOTAL" >> $GITHUB_OUTPUT

      - name: Write new total clone count to file
        run: |
          echo "${steps.calculate-new-total.outputs.new_total}" > clone_count.txt

      - name: Commit and push
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add clone_count.txt
            git commit -m "Update clone count"
            if [ $? -ne 0 ]; then
              echo "Failed to commit changes. Exit code: $?"
              exit 1
            fi
            git push
            if [ $? -ne 0 ]; then
              echo "Failed to push changes. Exit code: $?"
              exit 1
            fi
          else
            echo "No changes to commit."
          fi
